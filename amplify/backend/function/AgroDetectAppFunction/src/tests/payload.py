from io import BytesIO

with open(r"C:\Users\marin\Desktop\AgroDetectBachelorFrontend\amplify\backend\function\AgroDetectAppFunction\src\tests\test_image.jpg", "rb") as f:
    image_bytes: bytes = f.read()

# pylint: disable=C0301
EVENT: dict = {"body": ""}

ENV_VARS: dict = {"DYNAMODB_TABLE_NAME": "TEST_TABLE",
            "SAGEMAKER_INFERENCE_ENDPOINT": "TEST_ENDPOINT"
}

REKOGNITION: dict = {
    "RESPONSE": {"Labels":
                 [
                     {"Name": "Plant"},
                     {"Name": "Leaf"},
                     {"Name": "Agriculture"}
                 ]
                },
    "EXPECTED_PARAMS": {"Image":
                        {"Bytes": image_bytes},
                        "MaxLabels": 10
                       },
    "NOT_PLANT_RESPONSE": {"Labels":
                 [
                     {"Name": "Cat"},
                     {"Name": "Dog"},
                     {"Name": "Animal"}
                 ]
                }
}

SAGEMAKER: dict = {
    "RESPONSE": {"Body": BytesIO(b"Test Healthy")},
    "EXPECTED_PARAMS": {"EndpointName": ENV_VARS["SAGEMAKER_INFERENCE_ENDPOINT"],
                        "Body": image_bytes, "ContentType": "application/x-image"}
}

DYNAMODB: dict = {
    "RESPONSE": {"Item":
                 {"Name":
                  {"S": "Test Healthy"},
                   "Description": {"S": ""},
                   "isDisease": {"BOOL": False},
                   "Products": {"L": []},
                   "Treatments": {"L": []}
                 }
                },
    "EXPECTED_PARAMS": {"TableName": ENV_VARS["DYNAMODB_TABLE_NAME"],
                        "Key": {"Name": {"S": "Test Healthy"}}}
}
